<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.breaktheice.moimat.persistence.PostMapper">

	<select id="totalCount" resultType="Long">
	<![CDATA[		
		SELECT  count(*)
		FROM 	
		(	
			SELECT  rownum rn, post_id, post_num, brd_id, post_title, post_content,
			        mem_id, post_nickname, post_email, post_regdate, post_update,
			        post_hit, post_reply, post_origin, post_depth
			FROM post
			WHERE 
		]]>
<!-- 		검색조건 -->
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
			<trim prefix="OR">
				<choose>
					<when test="type == 'T'.toString()">
						post_title like '%'||#{keyword}||'%'
					</when>	
					<when test="type == 'C'.toString()">
						post_content like '%'||#{keyword}||'%'
					</when>	
					<when test="type == 'W'.toString()">
						post_nickname like '%'||#{keyword}||'%'
					</when>		
					<when test="type == 'Q'.toString()">
						((post_title like '%'||#{keyword}||'%' )OR
						(post_content like '%'||#{keyword}||'%') OR
						(post_nickname like '%'||#{keyword}||'%') )
						AND
						(post_reply = 'Q' AND 
							post_id NOT IN (select post_origin
						                    from post
						                    where post_reply = 'A'))
					</when>				
				</choose>
			</trim>
			</foreach>
		</trim>
		<![CDATA[
			brd_id =  #{brdId}
		)
		]]>
	
	</select>

	<update id="viewCount">
        UPDATE  post
	    SET     post_hit = post_hit + 1
	    WHERE   post_id = ${postId}
	</update>
	
	<select id="memberCheck" resultType="Long">
		SELECT mem_id
    	FROM post 
    	WHERE post_id= ${postId}
	</select>

	<select id="list" resultType="com.breaktheice.moimat.domain.PostDomain">
	<![CDATA[		
		SELECT  rownum rn, post_id, post_num, brd_id, post_title, post_content,
		        mem_id, post_nickname, post_email, post_regdate, post_update,
		        post_hit, post_reply, post_origin, post_depth
		FROM 	
		(	
			SELECT  rownum rn, post_id, post_num, brd_id, post_title, post_content,
			        mem_id, post_nickname, post_email, post_regdate, post_update,
			        post_hit, post_reply, post_origin, post_depth
			FROM post
			WHERE 
		]]>
<!-- 		검색조건 -->
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
			<trim prefix="OR">
				<choose>
					<when test="type == 'T'.toString()">
						post_title like '%'||#{keyword}||'%'
					</when>	
					<when test="type == 'C'.toString()">
						post_content like '%'||#{keyword}||'%'
					</when>	
					<when test="type == 'W'.toString()">
						post_nickname like '%'||#{keyword}||'%'
					</when>	
					<when test="type == 'Q'.toString()">
						((post_title like '%'||#{keyword}||'%' )OR
						(post_content like '%'||#{keyword}||'%') OR
						(post_nickname like '%'||#{keyword}||'%'))
						AND
						(post_reply = 'Q' AND 
							post_id NOT IN (select post_origin
						                    from post
						                    where post_reply = 'A'))
					</when>				
				</choose>
			</trim>
			</foreach>
		</trim>
		<![CDATA[
			brd_id =  #{brdId} and
			rownum <= #{pageNum} * #{amount}
		)
		WHERE rn > (#{pageNum} -1 )* #{amount}
		ORDER BY post_origin DESC, post_depth
		]]>
<!-- 	post_num -->
	</select>
	

	
	<select id="view" resultType="com.breaktheice.moimat.domain.PostDomain">
       	SELECT  post_id, post_num, brd_id, post_title, post_content,
		        mem_id, post_nickname, post_email, post_regdate, post_update,
		        post_hit, post_reply, post_origin, post_depth
		FROM 	post
		WHERE 	post_id = #{postId}
	</select>
	
	<insert id="add">
		INSERT INTO post
		(
			post_id, post_num, brd_id, post_title, post_content,
			mem_id, post_nickname, post_email, post_regdate, post_update,
			post_hit, post_reply, post_origin, post_depth
		)
		VALUES
		(
			post_seq.nextval, #{postNum}, #{brdId}, #{postTitle}, #{postContent},
			#{memId}, #{postNickname}, #{postEmail}, sysdate, sysdate,
			0, #{postReply}, post_seq.currval, #{postDepth}
		)
	</insert>
	
	<insert id="reply">
		INSERT INTO post
		(
			post_id, post_num, brd_id, post_title, post_content,
			mem_id, post_nickname, post_email, post_regdate, post_update,
			post_hit, post_reply, post_origin, post_depth
		)
		VALUES
		(
			post_seq.nextval, #{postNum}, #{brdId}, #{postTitle}, #{postContent},
			#{memId}, #{postNickname}, #{postEmail}, sysdate, sysdate,
			0, UPPER(#{postReply}), #{postOrigin}, #{postDepth}
		)
	</insert>
	
	<update id="update">
	    UPDATE  post
	    SET     post_num 	  =  #{postNum}, 
                brd_id 		  =  #{brdId}, 
                post_title 	  =  #{postTitle}, 
                post_content  =  #{postContent}, 
                mem_id 		  =  #{memId}, 
                post_nickname =  #{postNickname}, 
                post_email 	  =  #{postEmail}, 
                post_reply 	  =  #{postReply},
                post_update   =  sysdate
        WHERE   post_id 	  =  #{postId}
	</update>
	
	<delete id="remove">
	    DELETE FROM post
    	WHERE post_id = #{postId}
	</delete>
	
	<select id="myqnaTotalCount"  resultType="Long">
		<![CDATA[		
		SELECT  count(*)
		FROM 	
		(	
			SELECT  rownum rn, post_id, post_num, brd_id, post_title, post_content,
			        mem_id, post_nickname, post_email, post_regdate, post_update,
			        post_hit, post_reply, post_origin, post_depth
			FROM post
			WHERE 
		]]>
<!-- 		검색조건 -->
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="c.typeArr">
			<trim prefix="OR">
				<choose>
					<when test="type == 'T'.toString()">
						post_title like '%'||#{c.keyword}||'%'
					</when>	
					<when test="type == 'C'.toString()">
						post_content like '%'||#{c.keyword}||'%'
					</when>		
				</choose>
			</trim>
			</foreach>
		</trim>
		<![CDATA[
			brd_id = #{c.brdId} and post_origin in (select post_id
		                                    from post
		                                    where brd_id= #{c.brdId}
		                                    and mem_id= #{memId } )
		)
		]]>
	
	</select>
	
	<select id="myqnaList" resultType="com.breaktheice.moimat.domain.PostDomain">
			<![CDATA[		
		SELECT  rownum rn, post_id, post_num, brd_id, post_title, post_content,
		        mem_id, post_nickname, post_email, post_regdate, post_update,
		        post_hit, post_reply, post_origin, post_depth
		FROM 	
		(	
			SELECT  rownum rn, post_id, post_num, brd_id, post_title, post_content,
			        mem_id, post_nickname, post_email, post_regdate, post_update,
			        post_hit, post_reply, post_origin, post_depth
			FROM post
			WHERE 
		]]>
<!-- 		검색조건 -->
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="c.typeArr">
			<trim prefix="OR">
				<choose>
					<when test="type == 'T'.toString()">
						post_title like '%'||#{c.keyword}||'%'
					</when>	
					<when test="type == 'C'.toString()">
						post_content like '%'||#{c.keyword}||'%'
					</when>				
				</choose>
			</trim>
			</foreach>
		</trim>
		<![CDATA[
			brd_id =  #{c.brdId} 
			and 
			post_origin in (select post_id
                             from post
                             where brd_id = #{c.brdId}
                             and mem_id= #{memId } )
			and
			rownum <= #{c.pageNum} * #{c.amount}
		)
		WHERE rn > (#{c.pageNum} -1 )* #{c.amount}
		ORDER BY post_origin DESC, post_depth
		]]>
	</select>
	
	
</mapper>